<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Item_blog extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Item_blog_model','Category_blog_model','Comment_model']);
    } 

    /*
     * Listing of item_blog
     */
    function index()
    {
        $params['limit'] = 20; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('item_blog/index?');
        $config['total_rows'] = $this->Item_blog_model->get_all_item_blog_count();
        $this->pagination->initialize($config);

        $data['item_blog'] = $this->Item_blog_model->get_all_item_blog($params);
		$this->load->view('include/header');
		$this->load->view('blog/item_blog/index', $data);
		$this->load->view('include/footer');
    }

    /*
     * Adding a new item_blog
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('item_title','Item Title','required|max_length[250]');
		$this->form_validation->set_rules('item_content','Item Content','required');
		
		
		if($this->form_validation->run())     
        {   

			$params = [];

            $config['upload_path']= './uploads/';
            $config['allowed_types']= 'gif|jpg|png';
            $new_file=uniqid('blog');
            $config['file_name'] = $new_file.".jpg";

            $this->load->library('upload', $config);


            if ( ! $this->upload->do_upload('item_picture'))
            {
                $error = array('error' => $this->upload->display_errors());
                $this->session->set_flashdata(['error'=>$error['error']]);
                redirect($_SERVER['HTTP_REFERER']);
            }
            else{

				$params = array(
					'item_category_id' => $this->input->post('item_category_id'),
					'item_title' => $this->input->post('item_title'),
					'item_user_id' =>'1',
					'create_at' => $this->input->post('create_at'),
					'item_content' => $this->input->post('item_content'),
					'item_picture'=> '/uploads/'. $config['file_name'],
				);
		
				$item_blog_id = $this->Item_blog_model->add_item_blog($params);
				redirect('item_blog/index');  
            }
            
        }
        else
        {
			$this->load->model('Category_blog_model');
			$data['all_category_blog'] = $this->Category_blog_model->get_all_category_blog();
           
			$this->load->view('include/header');
			$this->load->view('blog/item_blog/add', $data);
			$this->load->view('include/footer');
        }
    }  

    /*
     * Editing a item_blog
     */
    function edit($item_id)
    {   
        // check if the item_blog exists before trying to edit it
        $data['item_blog'] = $this->Item_blog_model->get_item_blog($item_id);
        
        if(isset($data['item_blog']['item_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('item_title','Item Title','required|max_length[250]');
			$this->form_validation->set_rules('item_content','Item Content','required');
			$this->form_validation->set_rules('item_picture','Item Picture','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'item_category_id' => $this->input->post('item_category_id'),
					'item_title' => $this->input->post('item_title'),
					'item_user_id' => $this->input->post('item_user_id'),
					'create_at' => $this->input->post('create_at'),
					'item_content' => $this->input->post('item_content'),
					'item_picture' => $this->input->post('item_picture'),
                );

                $this->Item_blog_model->update_item_blog($item_id,$params);            
                redirect('item_blog/index');
            }
            else
            {
				$this->load->model('Category_blog_model');
				$data['all_category_blog'] = $this->Category_blog_model->get_all_category_blog();

				$this->load->view('include/header');
				$this->load->view('blog/item_blog/edit', $data);
				$this->load->view('include/footer');
            }
        }
        else
            show_error('The item_blog you are trying to edit does not exist.');
    } 

    /*
     * Deleting item_blog
     */
    function remove($item_id)
    {
        $item_blog = $this->Item_blog_model->get_item_blog($item_id);

        // check if the item_blog exists before trying to delete it
        if(isset($item_blog['item_id']))
        {
            $this->Item_blog_model->delete_item_blog($item_id);
            redirect('item_blog/index');
        }
        else
            show_error('The item_blog you are trying to delete does not exist.');
    }


	function blog_of_user(){

		$data['item_blogs'] = $this->Item_blog_model->get_all_item_blog_with_object();
		$this->load->view('Templates/header');
		$this->load->view('blog/item_blog/blog', $data);
		$this->load->view('Templates/footer');

	}

    function blog_of_user_detail($id){

        $data['item_blogs'] = $this->Item_blog_model->item_blog_by_id($id);
		$data['items_recents'] = $this->Item_blog_model->get_recent_item_blog();
		$data['item_categories'] = $this->Category_blog_model->get_all_cateogry_with_object();
		$data['comments'] = $this->Comment_model->get_comment_of_item_blog($id);
		$data['comment_count'] = $this->Comment_model->count_comment_of_item_blog($id);
		$this->load->view('Templates/header');
		$this->load->view('blog/item_blog/detail', $data);
		$this->load->view('Templates/footer');
    }


	function get_item_category($id_categroy){

		$data['item_blogs'] = $this->Item_blog_model->get_all_item_by_category($id_categroy);
		$this->load->view('Templates/header');
		$this->load->view('blog/item_blog/blog', $data);
		$this->load->view('Templates/footer');

	}
    
}
