<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Commission_tech extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Commission_tech_model');
    } 

    /*
     * Listing of commission_tech
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('commission_tech/index?');
        $config['total_rows'] = $this->Commission_tech_model->get_all_commission_tech_count();
        $this->pagination->initialize($config);

        $data['commission_tech'] = $this->Commission_tech_model->get_all_commission_tech($params);

		$this->load->view('include/header');
		$this->load->view('advocate/commission_tech/index',$data);
		$this->load->view('include/footer');
    }

    /*
     * Adding a new commission_tech
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nom_commission','Nom Commission','max_length[100]|required');
		$this->form_validation->set_rules('description','Description','max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nom_commission' => $this->input->post('nom_commission'),
				'description' => $this->input->post('description'),
            );
            
            $commission_tech_id = $this->Commission_tech_model->add_commission_tech($params);
            redirect('commission_tech/index');
        }
        else
        {            
           

			$this->load->view('include/header');
			$this->load->view('advocate/commission_tech/add');
			$this->load->view('include/footer');
        }
    }  

    /*
     * Editing a commission_tech
     */
    function edit($id)
    {   
        // check if the commission_tech exists before trying to edit it
        $data['commission_tech'] = $this->Commission_tech_model->get_commission_tech($id);
        
        if(isset($data['commission_tech']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nom_commission','Nom Commission','max_length[100]|required');
			$this->form_validation->set_rules('description','Description','max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nom_commission' => $this->input->post('nom_commission'),
					'description' => $this->input->post('description'),
                );

                $this->Commission_tech_model->update_commission_tech($id,$params);            
                redirect('commission_tech/index');
            }
            else
            {
               

				$this->load->view('include/header');
				$this->load->view('advocate/commission_tech/edit');
				$this->load->view('include/footer');
            }
        }
        else
            show_error('The commission_tech you are trying to edit does not exist.');
    } 

    /*
     * Deleting commission_tech
     */
    function remove($id)
    {
        $commission_tech = $this->Commission_tech_model->get_commission_tech($id);

        // check if the commission_tech exists before trying to delete it
        if(isset($commission_tech['id']))
        {
            $this->Commission_tech_model->delete_commission_tech($id);
            redirect('commission_tech/index');
        }
        else
            show_error('The commission_tech you are trying to delete does not exist.');
    }
    
}
